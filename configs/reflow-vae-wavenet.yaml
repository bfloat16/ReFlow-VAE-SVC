data:
  f0_extractor: 'rmvpe' # 'parselmouth', 'dio', 'harvest', 'crepe' or 'rmvpe'
  f0_min: 40 # about C2
  f0_max: 1200 # about G5
  sampling_rate: 44100
  block_size: 512 # Equal to hop_length
  duration: 1 # Audio duration during training, must be less than the duration of the shortest audio clip
  encoder: 'contentvec768l12' # 'hubertsoft', 'hubertbase', 'hubertbase768', 'contentvec', 'contentvec768' or 'contentvec768l12' or 'cnhubertsoftfish'
  cnhubertsoft_gate: 10
  encoder_sample_rate: 16000
  encoder_hop_size: 320
  encoder_out_channels: 768 # 256 if using 'hubertsoft'
  encoder_ckpt: pretrain/contentvec/checkpoint_best_legacy_500.pt
  train_path: data/train # Create a folder named "audio" under this path and put the audio clip in it
  valid_path: data/val # Create a folder named "audio" under this path and put the audio clip in it
  extensions: # List of extension included in the data collection
    - wav
model:
  type: 'RectifiedFlow_VAE'
  back_bone: 'wavenet'
  n_layers: 30
  n_chans: 768
  n_hidden: 256
  use_pitch_aug: true
  n_spk: 16 # max number of different speakers
device: cuda # training device
vocoder:
  type: 'nsf-hifigan'
  ckpt: 'pretrain/nsf_hifigan/model'
infer:
  infer_step: 10
  method: 'rk4' # 'euler', 'rk4'
env:
  expdir: exp/reflowvae-wavenet
  gpu_id: 0
train:
  num_workers: 4 # If your cpu and gpu are both very strong, set to 0 may be faster!
  amp_dtype: fp16 # fp32, fp16 or bf16 (fp16 or bf16 may be faster if it is supported by your gpu)
  batch_size: 150
  cache_all_data: true # Save Internal-Memory or Graphics-Memory if it is false, but may be slow
  cache_device: 'cpu' # Set to 'cuda' to cache the data into the Graphics-Memory, fastest speed for strong gpu
  cache_fp16: true
  epochs: 100000
  interval_log: 100
  interval_val: 5000
  interval_force_save: 10000
  lr: 0.00015
  decay_step: 50000
  gamma: 0.5
  weight_decay: 0
  save_opt: false